name: ci

on:
  push:
    branches:
      - master
  pull_request:
    paths-ignore:
      - "website/**"

jobs:
  build:
    name: tests
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: setup environment
        uses: ./.github/actions/setup

      - name: check
        run: cargo check

      - name: "build (bin: conductor)"
        run: cargo build --bin conductor --release

      - name: "build (bin: cloudflare_worker_wasm)"
        working-directory: bin/cloudflare_worker
        run: cargo install -q worker-build && worker-build

      - name: test
        run: cargo test

      - name: install node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: install napi deps
        working-directory: libs/napi
        run: yarn install

      - name: build napi lib
        working-directory: libs/napi
        run: yarn build

  graphql-over-http:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: setup environment
        uses: ./.github/actions/setup

      - name: figure out versions
        id: versions
        working-directory: ./tests/graphql-over-http
        run:
          PNPM_VERSION=$(cat package.json | jq -r '.packageManager' | awk -F@ '{print $2}')
          NODE_VERSION=$(cat package.json | jq -r '.engines.node' | awk -F= '{print $2}')

          echo "pnpm=$PNPM_VERSION" >> $GITHUB_OUTPUT
          echo "nodejs=$NODE_VERSION" >> $GITHUB_OUTPUT

      - uses: the-guild-org/shared-config/setup@main
        name: setup env
        with:
          nodeVersion: ${{ steps.versions.outputs.nodejs }}
          packageManager: pnpm
          packageManagerVersion: ${{ steps.versions.outputs.pnpm }}
          workingDirectory: ./tests/graphql-over-http

      - uses: JarvusInnovations/background-action@v1
        with:
          run: cargo run --bin conductor -- tests/graphql-over-http/config.yaml
          wait-on: http-get://127.0.0.1:9000/graphql
          tail: true
          wait-for: 9m
          log-output-if: failure
          log-output: true

      - uses: JarvusInnovations/background-action@v1
        with:
          run: cargo run --release
          working-directory: benchmark/server
          wait-on: http-get://127.0.0.1:4000
          tail: true
          wait-for: 9m
          log-output-if: failure
          log-output: true

      - run: pnpm start
        name: audit
        working-directory: tests/graphql-over-http
        env:
          SERVER_URL: http://127.0.0.1:9000/graphql

  config-json-schema:
    runs-on: ubuntu-22.04
    name: config-json-schema / integrity
    steps:
      - name: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: setup environment
        uses: ./.github/actions/setup

      - name: generate config json schema
        run: cargo run --bin generate-config-schema

      - name: check diff
        run: git diff --exit-code ./libs/config/conductor.schema.json

  lint:
    runs-on: ubuntu-22.04
    name: rustfmt + clippy
    steps:
      - name: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: setup environment
        uses: ./.github/actions/setup
        with:
          components: rustfmt, clippy

      - name: cargo fmt
        run: cargo fmt --all -- --check

      - uses: actions-rs/clippy-check@v1
        name: cargo clippy
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  tests-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: setup environment
        uses: ./.github/actions/setup

      - name: run tarpaulin on PR branch
        run: |
          cargo install cargo-tarpaulin
          tarpaulin_output=$(cargo tarpaulin --out Xml --skip-clean)
          echo "$tarpaulin_output"
        env:
          RUSTFLAGS: "-C link-dead-code"

      - name: check tarpaulin coverage
        id: check-tarpaulin-coverage
        run: |
          tarpaulin_cov=$(echo "$tarpaulin_output" | grep -oP '(?<=0.00% coverage, )\d+')
          echo "::set-output name=tarpaulin_coverage::$tarpaulin_cov"
        continue-on-error: true

  compare-coverage:
    runs-on: ubuntu-latest
    needs: [tests-coverage]
    steps:
      - name: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: setup environment
        uses: ./.github/actions/setup

      - name: run tarpaulin on master branch
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin --out Xml --skip-clean
        env:
          RUSTFLAGS: "-C link-dead-code"

      - name: get tarpaulin coverage
        id: get-tarpaulin-coverage
        run: |
          tarpaulin_cov=$(cat tarpaulin_report/coverage.xml | grep -oP '(?<=line-rate=")[^"]+')
          echo "::set-output name=tarpaulin_cov::$tarpaulin_cov%"
        continue-on-error: true

      - name: compare tarpaulin coverage
        run: |
          tarpaulin_pr_cov=${{ steps.check-tarpaulin-coverage.outputs.tarpaulin_coverage }}
          tarpaulin_master_cov=${{ steps.get-tarpaulin-coverage.outputs.tarpaulin_cov | tr -d '%' }}

          if (( $tarpaulin_pr_cov < $tarpaulin_master_cov )); then
            echo "Coverage on the PR branch is lower than on the master branch. PR will not be merged."
            exit 1
          fi
