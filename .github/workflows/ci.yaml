name: ci

on:
  push:
    branches:
      - master
  pull_request:
    paths-ignore:
      - "website/**"

jobs:
  build:
    name: tests
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: setup environment
        uses: ./.github/actions/setup

      - name: check
        run: cargo check

      - name: "build (bin: conductor)"
        run: cargo build --bin conductor --release

      - name: "build (bin: cloudflare_worker_wasm)"
        working-directory: bin/cloudflare_worker
        run: cargo install -q worker-build && worker-build

      - name: test
        run: cargo test

      - name: install node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: install napi deps
        working-directory: libs/napi
        run: yarn install

      - name: build napi lib
        working-directory: libs/napi
        run: yarn build

  graphql-over-http:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: setup environment
        uses: ./.github/actions/setup

      - name: figure out versions
        id: versions
        working-directory: ./tests/graphql-over-http
        run:
          PNPM_VERSION=$(cat package.json | jq -r '.packageManager' | awk -F@ '{print $2}')
          NODE_VERSION=$(cat package.json | jq -r '.engines.node' | awk -F= '{print $2}')

          echo "pnpm=$PNPM_VERSION" >> $GITHUB_OUTPUT
          echo "nodejs=$NODE_VERSION" >> $GITHUB_OUTPUT

      - uses: the-guild-org/shared-config/setup@main
        name: setup env
        with:
          nodeVersion: ${{ steps.versions.outputs.nodejs }}
          packageManager: pnpm
          packageManagerVersion: ${{ steps.versions.outputs.pnpm }}
          workingDirectory: ./tests/graphql-over-http

      - uses: JarvusInnovations/background-action@v1
        with:
          run: cargo run --bin conductor -- tests/graphql-over-http/config.yaml
          wait-on: http-get://127.0.0.1:9000/graphql
          tail: true
          wait-for: 9m
          log-output-if: failure
          log-output: true

      - uses: JarvusInnovations/background-action@v1
        with:
          run: cargo run --release
          working-directory: tests/test-server
          wait-on: http-get://127.0.0.1:4000
          tail: true
          wait-for: 9m
          log-output-if: failure
          log-output: true

      - run: pnpm start
        name: audit
        working-directory: tests/graphql-over-http
        env:
          SERVER_URL: http://127.0.0.1:9000/graphql

  config-json-schema:
    runs-on: ubuntu-22.04
    name: config-json-schema / integrity
    steps:
      - name: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: setup environment
        uses: ./.github/actions/setup

      - name: generate config json schema
        run: cargo run --bin generate-config-schema

      - name: check diff
        run: git diff --exit-code ./libs/config/conductor.schema.json

  lint:
    runs-on: ubuntu-22.04
    name: rustfmt + clippy
    steps:
      - name: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: setup environment
        uses: ./.github/actions/setup
        with:
          components: rustfmt, clippy

      - name: cargo fmt
        run: cargo fmt --all -- --check

      - uses: actions-rs/clippy-check@v1
        name: cargo clippy
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  panic-free-audit:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: setup environment
        uses: ./.github/actions/setup

      - name: run panic free analyzer
        run: cargo run --manifest-path tools/panic_free_analyzer/Cargo.toml > tools/panic_free_analyzer/output.md
        env:
          IGNORED_CRATES: e2e_tests,benches,server
          IGNORED_FILES: ./plugins/jwt_auth/src/test.rs

      - name: comment on pull request
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: tools/panic_free_analyzer/output.md
          comment_tag: rust-code-audit
