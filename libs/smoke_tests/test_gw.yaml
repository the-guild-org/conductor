server:
  port: 9000
  host: "127.0.0.1"

logger:
  format: pretty
  filter: info

sources:
  - type: graphql
    id: upstream
    config:
      endpoint: http://localhost:4000/
  - type: graphql
    id: upstream_schema_awareness
    config:
      endpoint: http://localhost:4000/
      schema_awareness:
        on_error: terminate
        format: introspection
        source:
          type: remote
          method: POST
          url: http://localhost:4000/

endpoints:
  # Just passthrough
  - from: upstream
    path: /graphql
    plugins:
      - type: graphiql

  # Passthrough with schema awareness
  - from: upstream_schema_awareness
    path: /graphql_schema_awareness
    plugins:
      - type: graphql_validation

  # The following endpoint is used to test the JWT plugin
  # We are running Keycloak with some pre-baked configuration (see `docker-compose.yaml`)
  # This one also sets the reject_unauthenticated_requests to true so it should not allow to access without a token
  - path: /jwt
    from: upstream
    plugins:
      - type: jwt_auth
        config:
          reject_unauthenticated_requests: true
          issuers:
            - http://localhost:4001/realms/test
          audiences:
            - account
          jwks_providers:
            - source: remote
              url: http://localhost:4001/realms/test/protocol/openid-connect/certs
              prefetch: true
              cache_duration: 10m

  # This one also sets the reject_unauthenticated_requests to false so it should allow access without a token
  - path: /jwt-nonsecure
    from: upstream
    plugins:
      - type: jwt_auth
        config:
          reject_unauthenticated_requests: false
          issuers:
            - http://localhost:4001/realms/test
          audiences:
            - account
          jwks_providers:
            - source: remote
              url: http://localhost:4001/realms/test/protocol/openid-connect/certs
              prefetch: true
              cache_duration: 10m

  # Jaeger with OTLP endpoint (over gRPC)
  - path: /telemetry-jaeger-otlp-grpc
    from: upstream
    plugins:
      - type: telemetry
        config:
          service_name: conductor-otlp-test-grpc
          targets:
            - type: otlp
              endpoint: http://localhost:4317
              protocol: grpc

  # Jaeger with OTLP endpoint (over HTTP)
  - path: /telemetry-jaeger-otlp-http
    from: upstream
    plugins:
      - type: telemetry
        config:
          service_name: conductor-otlp-test-http
          targets:
            - type: otlp
              endpoint: http://localhost:4318/v1/traces
              protocol: http

  # Zipkin (over HTTP)
  - path: /telemetry-zipkin
    from: upstream
    plugins:
      - type: telemetry
        config:
          service_name: conductor-zipkin
          targets:
            - type: zipkin

  # HTTP GET
  - path: /http-get
    from: upstream
    plugins:
      - type: http_get
        config:
          mutations: false
